def jvmEncoding = java.nio.charset.Charset.defaultCharset().name()
if (jvmEncoding != "UTF-8") {
    throw new IllegalStateException("Build environment must be UTF-8 (it is: $jvmEncoding) - add '-Dfile.encoding=UTF-8' to the GRADLE_OPTS environment variable ")
}

if (!JavaVersion.current().java8Compatible) {
    throw new IllegalStateException("Must be built with Java 8 or higher")
}

buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
        mavenLocal()
    }

    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.14.0'
        classpath "gradle.plugin.io.ratpack:ratpack-gradle:${ratpackVersion}"
    }
}

repositories {
    mavenLocal()
    jcenter()
}

group 'smartthings'
version = rootProject.file('version.txt').text.trim()

apply plugin: "base"
apply plugin: 'idea'
apply plugin: "io.ratpack.ratpack-groovy"
apply plugin: 'com.github.ben-manes.versions'

apply from: rootProject.file('gradle/publish.gradle')
apply from: rootProject.file('gradle/convention.gradle')

compileJava {
    options.compilerArgs << "-Xlint:unchecked"
}

dependencies {
    compile ratpack.dependency("hikari")
    compile ratpack.dependency("guice")
    compile "org.liquibase:liquibase-core:3.5.3"
    compile 'com.google.code.findbugs:annotations:3.0.1u2'

    testCompile 'org.spockframework:spock-core:1.1-groovy-2.4-rc-4'

    testRuntime 'cglib:cglib-nodep:3.2.5'
    testRuntime 'org.objenesis:objenesis:2.5.1'
    testRuntime 'com.h2database:h2:1.4.195'
    testRuntime 'org.slf4j:slf4j-api:1.7.25'
    testRuntime 'ch.qos.logback:logback-classic:1.2.3'
}
